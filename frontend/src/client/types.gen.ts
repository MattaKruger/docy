// This file is auto-generated by @hey-api/openapi-ts

export type Agent = {
    id?: number | null;
    name: string;
    system_prompt_id?: number | null;
    agent_type?: AgentType;
    agent_model?: AgentLlm;
    state?: AgentState;
};

export type AgentIn = {
    name: string;
    system_prompt_id: number;
    agent_type?: AgentType;
    agent_model?: AgentLlm;
    state?: AgentState;
};

export type AgentLlm = 'deepseek-r1-distill-qwen-32b' | 'groq_code' | 'groq_brainstorm';

export type AgentOut = {
    id: number;
    name: string;
    system_prompt_id?: number | null;
    system_prompt?: Prompt | null;
    agent_type: AgentType;
    agent_model: AgentLlm;
    state: AgentState;
    tasks?: Array<Task> | null;
};

export type AgentState = 'active' | 'inactive';

export type AgentType = 'default' | 'code' | 'brainstorm';

export type AgentUpdate = {
    name?: string | null;
    system_prompt_id?: number | null;
    agent_type?: AgentType | null;
    agent_model?: AgentLlm | null;
    state?: AgentState | null;
};

export type Artifact = {
    id?: number | null;
    name: string;
    description: string;
    content: string;
    validated?: boolean;
    artifact_type?: ArtifactType;
    project_id: number;
};

export type ArtifactIn = {
    name: string;
    description: string;
    content: string;
    validated?: boolean;
    artifact_type?: ArtifactType;
    project_id?: number | null;
};

export type ArtifactOut = {
    id: number;
    name: string;
    description: string;
    content: string;
    validated: boolean;
    artifact_type: ArtifactType;
    project: Project | null;
};

export type ArtifactType = 'default' | 'code' | 'markdown';

export type ArtifactUpdate = {
    name?: string | null;
    description?: string | null;
    content?: string | null;
    validated?: boolean | null;
    artifact_type?: ArtifactType | null;
    project_id?: number | null;
};

export type Category = 'coding' | 'writing' | 'planning';

export type Chat = {
    name: string;
    created_at?: string;
    id?: number | null;
    user_id: number;
};

export type ChatCreate = {
    name: string;
    created_at?: string;
};

export type ChatRead = {
    name: string;
    created_at?: string;
    id: number;
    user: User;
};

export type ChatReadWithMessages = {
    name: string;
    created_at?: string;
    id: number;
    user: User;
    messages?: Array<MessageRead>;
};

export type File = {
    name: string;
    content: string;
};

export type FileInfo = {
    name: string;
    size: number;
    modified: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type MessageCreate = {
    content: string;
    created_at?: string;
    chat_id: number;
};

export type MessageIn = {
    content: string;
    chat_id: number;
    artifact_id?: number | null;
};

export type MessageOut = {
    id: number;
    content: string;
    chat: Chat;
    artifact: Artifact | null;
};

export type MessageRead = {
    content: string;
    created_at?: string;
    chat_id: number;
    id: number;
};

export type NoteCreate = {
    title: string;
    content?: string | null;
    metadata?: NoteMetadata | null;
    folder?: string | null;
    template?: string | null;
};

export type NoteMetadata = {
    tags?: Array<string> | null;
    created?: string | null;
    modified?: string | null;
    status?: string | null;
};

export type NoteResponse = {
    title: string;
    path: string;
    content: string;
    metadata: NoteMetadata;
    created: string;
    modified: string;
};

export type NoteUpdate = {
    content?: string | null;
    metadata?: NoteMetadata | null;
};

export type Project = {
    id?: number | null;
    name: string;
    project_type?: ProjectType;
    description: string;
    framework: string;
    user_id?: number | null;
};

export type ProjectIn = {
    name: string;
    project_type: ProjectType;
    description?: string | null;
    framework: string;
    user_id?: number | null;
};

export type ProjectOut = {
    id: number;
    name: string;
    description: string | null;
    framework: string;
    project_type: ProjectType;
    user: User;
    artifacts: Array<Artifact> | null;
};

export type ProjectType = 'default' | 'code';

export type ProjectUpdate = {
    name?: string | null;
    type?: ProjectType | null;
    description?: string | null;
    user_id?: number | null;
};

export type Prompt = {
    id?: number | null;
    /**
     * Unique name for the prompt
     */
    name: string;
    /**
     * The full text content of the system prompt.
     */
    content: string;
};

/**
 * Schema for creating a new Prompt.
 */
export type PromptIn = {
    /**
     * Unique name for the prompt
     */
    name: string;
    /**
     * The full text content of the system prompt
     */
    content: string;
};

/**
 * Schema for updating an existing Prompt. All fields are optional.
 */
export type PromptUpdate = {
    /**
     * New unique name for the prompt
     */
    name?: string | null;
    /**
     * New full text content for the prompt
     */
    content?: string | null;
};

export type SubTaskIn = {
    name: string;
    description: string;
    is_completed?: boolean;
    task_id: number;
    agent_id?: number | null;
};

export type SubTaskOut = {
    id: number;
    name: string;
    description: string;
    is_completed: boolean;
    task: TaskOut;
};

export type Task = {
    id?: number | null;
    name: string;
    description: string;
    category?: Category;
    status?: TaskStatus;
    agent_id?: number | null;
    project_id?: number | null;
};

export type TaskIn = {
    name: string;
    description: string;
    task_type?: Category;
    agent_id?: number | null;
    project_id?: number | null;
    subtasks?: Array<SubTaskIn> | null;
};

export type TaskOut = {
    id: number;
    name: string;
    description: string;
    category: Category;
    subtasks?: Array<SubTaskOut>;
    agent?: Agent | null;
    project?: Project | null;
};

export type TaskStatus = 'pending' | 'in_progress' | 'completed' | 'failed' | 'ERROR';

export type TaskUpdate = {
    name?: string | null;
    description?: string | null;
    task_type?: Category | null;
};

export type User = {
    id?: number | null;
    name: string;
};

export type UserIn = {
    name: string;
};

export type UserOut = {
    id: number;
    name: string;
    projects: Array<Project> | null;
    chats: Array<Chat> | null;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type ReadRootGetResponse = ReadRootGetResponses[keyof ReadRootGetResponses];

export type LoadContentEndpointLoadContentGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/load-content';
};

export type LoadContentEndpointLoadContentGetResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type LoadContentEndpointLoadContentGetResponse = LoadContentEndpointLoadContentGetResponses[keyof LoadContentEndpointLoadContentGetResponses];

export type GetAgentsApiV1AgentsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/agents/';
};

export type GetAgentsApiV1AgentsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<AgentOut>;
};

export type GetAgentsApiV1AgentsGetResponse = GetAgentsApiV1AgentsGetResponses[keyof GetAgentsApiV1AgentsGetResponses];

export type CreateAgentApiV1AgentsPostData = {
    body: AgentIn;
    path?: never;
    query?: never;
    url: '/api/v1/agents/';
};

export type CreateAgentApiV1AgentsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateAgentApiV1AgentsPostError = CreateAgentApiV1AgentsPostErrors[keyof CreateAgentApiV1AgentsPostErrors];

export type CreateAgentApiV1AgentsPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAgentApiV1AgentsAgentIdGetData = {
    body?: never;
    path: {
        agent_id: number;
    };
    query?: never;
    url: '/api/v1/agents/{agent_id}';
};

export type GetAgentApiV1AgentsAgentIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAgentApiV1AgentsAgentIdGetError = GetAgentApiV1AgentsAgentIdGetErrors[keyof GetAgentApiV1AgentsAgentIdGetErrors];

export type GetAgentApiV1AgentsAgentIdGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateAgentApiV1AgentsAgentIdPutData = {
    body: AgentUpdate;
    path: {
        agent_id: number;
    };
    query?: never;
    url: '/api/v1/agents/{agent_id}';
};

export type UpdateAgentApiV1AgentsAgentIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateAgentApiV1AgentsAgentIdPutError = UpdateAgentApiV1AgentsAgentIdPutErrors[keyof UpdateAgentApiV1AgentsAgentIdPutErrors];

export type UpdateAgentApiV1AgentsAgentIdPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetActiveAgentsApiV1AgentsActiveGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/agents/active';
};

export type GetActiveAgentsApiV1AgentsActiveGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetArtifactsApiV1ArtifactsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/artifacts/';
};

export type GetArtifactsApiV1ArtifactsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ArtifactOut>;
};

export type GetArtifactsApiV1ArtifactsGetResponse = GetArtifactsApiV1ArtifactsGetResponses[keyof GetArtifactsApiV1ArtifactsGetResponses];

export type CreateArtifactApiV1ArtifactsPostData = {
    body: ArtifactIn;
    path?: never;
    query?: never;
    url: '/api/v1/artifacts/';
};

export type CreateArtifactApiV1ArtifactsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateArtifactApiV1ArtifactsPostError = CreateArtifactApiV1ArtifactsPostErrors[keyof CreateArtifactApiV1ArtifactsPostErrors];

export type CreateArtifactApiV1ArtifactsPostResponses = {
    /**
     * Successful Response
     */
    200: number;
};

export type CreateArtifactApiV1ArtifactsPostResponse = CreateArtifactApiV1ArtifactsPostResponses[keyof CreateArtifactApiV1ArtifactsPostResponses];

export type DeleteArtifactApiV1ArtifactsArtifactIdDeleteData = {
    body?: never;
    path: {
        artifact_id: number;
    };
    query?: never;
    url: '/api/v1/artifacts/{artifact_id}';
};

export type DeleteArtifactApiV1ArtifactsArtifactIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteArtifactApiV1ArtifactsArtifactIdDeleteError = DeleteArtifactApiV1ArtifactsArtifactIdDeleteErrors[keyof DeleteArtifactApiV1ArtifactsArtifactIdDeleteErrors];

export type DeleteArtifactApiV1ArtifactsArtifactIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetArtifactApiV1ArtifactsArtifactIdGetData = {
    body?: never;
    path: {
        artifact_id: number;
    };
    query?: never;
    url: '/api/v1/artifacts/{artifact_id}';
};

export type GetArtifactApiV1ArtifactsArtifactIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetArtifactApiV1ArtifactsArtifactIdGetError = GetArtifactApiV1ArtifactsArtifactIdGetErrors[keyof GetArtifactApiV1ArtifactsArtifactIdGetErrors];

export type GetArtifactApiV1ArtifactsArtifactIdGetResponses = {
    /**
     * Successful Response
     */
    200: ArtifactOut;
};

export type GetArtifactApiV1ArtifactsArtifactIdGetResponse = GetArtifactApiV1ArtifactsArtifactIdGetResponses[keyof GetArtifactApiV1ArtifactsArtifactIdGetResponses];

export type UpdateArtifactApiV1ArtifactsArtifactIdPutData = {
    body: ArtifactUpdate;
    path: {
        artifact_id: number;
    };
    query?: never;
    url: '/api/v1/artifacts/{artifact_id}';
};

export type UpdateArtifactApiV1ArtifactsArtifactIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateArtifactApiV1ArtifactsArtifactIdPutError = UpdateArtifactApiV1ArtifactsArtifactIdPutErrors[keyof UpdateArtifactApiV1ArtifactsArtifactIdPutErrors];

export type UpdateArtifactApiV1ArtifactsArtifactIdPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ReadChatsApiV1ChatChatsGetData = {
    body?: never;
    path?: never;
    query?: {
        skip?: number;
        limit?: number;
    };
    url: '/api/v1/chat/chats/';
};

export type ReadChatsApiV1ChatChatsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadChatsApiV1ChatChatsGetError = ReadChatsApiV1ChatChatsGetErrors[keyof ReadChatsApiV1ChatChatsGetErrors];

export type ReadChatsApiV1ChatChatsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ChatRead>;
};

export type ReadChatsApiV1ChatChatsGetResponse = ReadChatsApiV1ChatChatsGetResponses[keyof ReadChatsApiV1ChatChatsGetResponses];

export type CreateChatApiV1ChatChatsPostData = {
    body: ChatCreate;
    path?: never;
    query?: never;
    url: '/api/v1/chat/chats/';
};

export type CreateChatApiV1ChatChatsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateChatApiV1ChatChatsPostError = CreateChatApiV1ChatChatsPostErrors[keyof CreateChatApiV1ChatChatsPostErrors];

export type CreateChatApiV1ChatChatsPostResponses = {
    /**
     * Successful Response
     */
    201: ChatRead;
};

export type CreateChatApiV1ChatChatsPostResponse = CreateChatApiV1ChatChatsPostResponses[keyof CreateChatApiV1ChatChatsPostResponses];

export type ReadChatApiV1ChatChatsChatIdGetData = {
    body?: never;
    path: {
        chat_id: number;
    };
    query?: never;
    url: '/api/v1/chat/chats/{chat_id}';
};

export type ReadChatApiV1ChatChatsChatIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadChatApiV1ChatChatsChatIdGetError = ReadChatApiV1ChatChatsChatIdGetErrors[keyof ReadChatApiV1ChatChatsChatIdGetErrors];

export type ReadChatApiV1ChatChatsChatIdGetResponses = {
    /**
     * Successful Response
     */
    200: ChatReadWithMessages;
};

export type ReadChatApiV1ChatChatsChatIdGetResponse = ReadChatApiV1ChatChatsChatIdGetResponses[keyof ReadChatApiV1ChatChatsChatIdGetResponses];

export type ReadMessagesForChatApiV1ChatChatsChatIdMessagesGetData = {
    body?: never;
    path: {
        chat_id: number;
    };
    query?: {
        skip?: number;
        limit?: number;
    };
    url: '/api/v1/chat/chats/{chat_id}/messages/';
};

export type ReadMessagesForChatApiV1ChatChatsChatIdMessagesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadMessagesForChatApiV1ChatChatsChatIdMessagesGetError = ReadMessagesForChatApiV1ChatChatsChatIdMessagesGetErrors[keyof ReadMessagesForChatApiV1ChatChatsChatIdMessagesGetErrors];

export type ReadMessagesForChatApiV1ChatChatsChatIdMessagesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<MessageRead>;
};

export type ReadMessagesForChatApiV1ChatChatsChatIdMessagesGetResponse = ReadMessagesForChatApiV1ChatChatsChatIdMessagesGetResponses[keyof ReadMessagesForChatApiV1ChatChatsChatIdMessagesGetResponses];

export type CreateMessageForChatApiV1ChatChatsChatIdMessagesPostData = {
    body: MessageCreate;
    path: {
        chat_id: number;
    };
    query?: never;
    url: '/api/v1/chat/chats/{chat_id}/messages/';
};

export type CreateMessageForChatApiV1ChatChatsChatIdMessagesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMessageForChatApiV1ChatChatsChatIdMessagesPostError = CreateMessageForChatApiV1ChatChatsChatIdMessagesPostErrors[keyof CreateMessageForChatApiV1ChatChatsChatIdMessagesPostErrors];

export type CreateMessageForChatApiV1ChatChatsChatIdMessagesPostResponses = {
    /**
     * Successful Response
     */
    201: MessageRead;
};

export type CreateMessageForChatApiV1ChatChatsChatIdMessagesPostResponse = CreateMessageForChatApiV1ChatChatsChatIdMessagesPostResponses[keyof CreateMessageForChatApiV1ChatChatsChatIdMessagesPostResponses];

export type GetAllNotesApiV1NotesGetData = {
    body?: never;
    path?: never;
    query?: {
        limit?: number;
        offset?: number;
    };
    url: '/api/v1/notes/';
};

export type GetAllNotesApiV1NotesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllNotesApiV1NotesGetError = GetAllNotesApiV1NotesGetErrors[keyof GetAllNotesApiV1NotesGetErrors];

export type GetAllNotesApiV1NotesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<NoteResponse>;
};

export type GetAllNotesApiV1NotesGetResponse = GetAllNotesApiV1NotesGetResponses[keyof GetAllNotesApiV1NotesGetResponses];

export type CreateNoteApiV1NotesPostData = {
    body: NoteCreate;
    path?: never;
    query?: never;
    url: '/api/v1/notes/';
};

export type CreateNoteApiV1NotesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateNoteApiV1NotesPostError = CreateNoteApiV1NotesPostErrors[keyof CreateNoteApiV1NotesPostErrors];

export type CreateNoteApiV1NotesPostResponses = {
    /**
     * Successful Response
     */
    201: NoteResponse;
};

export type CreateNoteApiV1NotesPostResponse = CreateNoteApiV1NotesPostResponses[keyof CreateNoteApiV1NotesPostResponses];

export type GetRecentNotesApiV1NotesRecentGetData = {
    body?: never;
    path?: never;
    query?: {
        limit?: number;
    };
    url: '/api/v1/notes/recent';
};

export type GetRecentNotesApiV1NotesRecentGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecentNotesApiV1NotesRecentGetError = GetRecentNotesApiV1NotesRecentGetErrors[keyof GetRecentNotesApiV1NotesRecentGetErrors];

export type GetRecentNotesApiV1NotesRecentGetResponses = {
    /**
     * Successful Response
     */
    200: Array<NoteResponse>;
};

export type GetRecentNotesApiV1NotesRecentGetResponse = GetRecentNotesApiV1NotesRecentGetResponses[keyof GetRecentNotesApiV1NotesRecentGetResponses];

export type SearchNotesApiV1NotesSearchGetData = {
    body?: never;
    path?: never;
    query: {
        query: string;
    };
    url: '/api/v1/notes/search';
};

export type SearchNotesApiV1NotesSearchGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SearchNotesApiV1NotesSearchGetError = SearchNotesApiV1NotesSearchGetErrors[keyof SearchNotesApiV1NotesSearchGetErrors];

export type SearchNotesApiV1NotesSearchGetResponses = {
    /**
     * Successful Response
     */
    200: Array<NoteResponse>;
};

export type SearchNotesApiV1NotesSearchGetResponse = SearchNotesApiV1NotesSearchGetResponses[keyof SearchNotesApiV1NotesSearchGetResponses];

export type GetNoteApiV1NotesNoteIdGetData = {
    body?: never;
    path: {
        /**
         * The note identifier or path
         */
        note_id: string;
    };
    query?: never;
    url: '/api/v1/notes/{note_id}';
};

export type GetNoteApiV1NotesNoteIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetNoteApiV1NotesNoteIdGetError = GetNoteApiV1NotesNoteIdGetErrors[keyof GetNoteApiV1NotesNoteIdGetErrors];

export type GetNoteApiV1NotesNoteIdGetResponses = {
    /**
     * Successful Response
     */
    200: NoteResponse;
};

export type GetNoteApiV1NotesNoteIdGetResponse = GetNoteApiV1NotesNoteIdGetResponses[keyof GetNoteApiV1NotesNoteIdGetResponses];

export type UpdateNoteApiV1NotesNoteIdPutData = {
    body: NoteUpdate;
    path: {
        note_id: string;
    };
    query?: never;
    url: '/api/v1/notes/{note_id}';
};

export type UpdateNoteApiV1NotesNoteIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateNoteApiV1NotesNoteIdPutError = UpdateNoteApiV1NotesNoteIdPutErrors[keyof UpdateNoteApiV1NotesNoteIdPutErrors];

export type UpdateNoteApiV1NotesNoteIdPutResponses = {
    /**
     * Successful Response
     */
    200: NoteResponse;
};

export type UpdateNoteApiV1NotesNoteIdPutResponse = UpdateNoteApiV1NotesNoteIdPutResponses[keyof UpdateNoteApiV1NotesNoteIdPutResponses];

export type GetNoteLinksApiV1NotesNoteIdLinksGetData = {
    body?: never;
    path: {
        note_id: string;
    };
    query?: never;
    url: '/api/v1/notes/{note_id}/links';
};

export type GetNoteLinksApiV1NotesNoteIdLinksGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetNoteLinksApiV1NotesNoteIdLinksGetError = GetNoteLinksApiV1NotesNoteIdLinksGetErrors[keyof GetNoteLinksApiV1NotesNoteIdLinksGetErrors];

export type GetNoteLinksApiV1NotesNoteIdLinksGetResponses = {
    /**
     * Successful Response
     */
    200: Array<string>;
};

export type GetNoteLinksApiV1NotesNoteIdLinksGetResponse = GetNoteLinksApiV1NotesNoteIdLinksGetResponses[keyof GetNoteLinksApiV1NotesNoteIdLinksGetResponses];

export type GetNoteTagsApiV1NotesNoteIdTagsGetData = {
    body?: never;
    path: {
        note_id: string;
    };
    query?: never;
    url: '/api/v1/notes/{note_id}/tags';
};

export type GetNoteTagsApiV1NotesNoteIdTagsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetNoteTagsApiV1NotesNoteIdTagsGetError = GetNoteTagsApiV1NotesNoteIdTagsGetErrors[keyof GetNoteTagsApiV1NotesNoteIdTagsGetErrors];

export type GetNoteTagsApiV1NotesNoteIdTagsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<string>;
};

export type GetNoteTagsApiV1NotesNoteIdTagsGetResponse = GetNoteTagsApiV1NotesNoteIdTagsGetResponses[keyof GetNoteTagsApiV1NotesNoteIdTagsGetResponses];

export type GetProjectsApiV1ProjectsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/projects/';
};

export type GetProjectsApiV1ProjectsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ProjectOut>;
};

export type GetProjectsApiV1ProjectsGetResponse = GetProjectsApiV1ProjectsGetResponses[keyof GetProjectsApiV1ProjectsGetResponses];

export type CreateProjectApiV1ProjectsPostData = {
    body: ProjectIn;
    path?: never;
    query?: never;
    url: '/api/v1/projects/';
};

export type CreateProjectApiV1ProjectsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateProjectApiV1ProjectsPostError = CreateProjectApiV1ProjectsPostErrors[keyof CreateProjectApiV1ProjectsPostErrors];

export type CreateProjectApiV1ProjectsPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetProjectApiV1ProjectsProjectIdGetData = {
    body?: never;
    path: {
        project_id: number;
    };
    query?: never;
    url: '/api/v1/projects/{project_id}';
};

export type GetProjectApiV1ProjectsProjectIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetProjectApiV1ProjectsProjectIdGetError = GetProjectApiV1ProjectsProjectIdGetErrors[keyof GetProjectApiV1ProjectsProjectIdGetErrors];

export type GetProjectApiV1ProjectsProjectIdGetResponses = {
    /**
     * Successful Response
     */
    200: ProjectOut;
};

export type GetProjectApiV1ProjectsProjectIdGetResponse = GetProjectApiV1ProjectsProjectIdGetResponses[keyof GetProjectApiV1ProjectsProjectIdGetResponses];

export type UpdateProjectApiV1ProjectsProjectIdPutData = {
    body: ProjectUpdate;
    path: {
        project_id: number;
    };
    query?: never;
    url: '/api/v1/projects/{project_id}';
};

export type UpdateProjectApiV1ProjectsProjectIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateProjectApiV1ProjectsProjectIdPutError = UpdateProjectApiV1ProjectsProjectIdPutErrors[keyof UpdateProjectApiV1ProjectsProjectIdPutErrors];

export type UpdateProjectApiV1ProjectsProjectIdPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetPromptsApiV1PromptsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/prompts/';
};

export type GetPromptsApiV1PromptsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<Prompt>;
};

export type GetPromptsApiV1PromptsGetResponse = GetPromptsApiV1PromptsGetResponses[keyof GetPromptsApiV1PromptsGetResponses];

export type CreatePromptApiV1PromptsPostData = {
    body: PromptIn;
    path?: never;
    query?: never;
    url: '/api/v1/prompts/';
};

export type CreatePromptApiV1PromptsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreatePromptApiV1PromptsPostError = CreatePromptApiV1PromptsPostErrors[keyof CreatePromptApiV1PromptsPostErrors];

export type CreatePromptApiV1PromptsPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetPromptApiV1PromptsPromptIdGetData = {
    body?: never;
    path: {
        prompt_id: number;
    };
    query?: never;
    url: '/api/v1/prompts/{prompt_id}';
};

export type GetPromptApiV1PromptsPromptIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetPromptApiV1PromptsPromptIdGetError = GetPromptApiV1PromptsPromptIdGetErrors[keyof GetPromptApiV1PromptsPromptIdGetErrors];

export type GetPromptApiV1PromptsPromptIdGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdatePromptApiV1PromptsPromptIdPutData = {
    body: PromptUpdate;
    path: {
        prompt_id: number;
    };
    query?: never;
    url: '/api/v1/prompts/{prompt_id}';
};

export type UpdatePromptApiV1PromptsPromptIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdatePromptApiV1PromptsPromptIdPutError = UpdatePromptApiV1PromptsPromptIdPutErrors[keyof UpdatePromptApiV1PromptsPromptIdPutErrors];

export type UpdatePromptApiV1PromptsPromptIdPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AddMessageToTaskApiV1TasksTaskIdMessagePostData = {
    body: MessageIn;
    path: {
        task_id: number;
    };
    query?: never;
    url: '/api/v1/tasks/{task_id}/message';
};

export type AddMessageToTaskApiV1TasksTaskIdMessagePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddMessageToTaskApiV1TasksTaskIdMessagePostError = AddMessageToTaskApiV1TasksTaskIdMessagePostErrors[keyof AddMessageToTaskApiV1TasksTaskIdMessagePostErrors];

export type AddMessageToTaskApiV1TasksTaskIdMessagePostResponses = {
    /**
     * Successful Response
     */
    200: MessageOut;
};

export type AddMessageToTaskApiV1TasksTaskIdMessagePostResponse = AddMessageToTaskApiV1TasksTaskIdMessagePostResponses[keyof AddMessageToTaskApiV1TasksTaskIdMessagePostResponses];

export type GetAllTasksApiV1TasksGetData = {
    body?: never;
    path?: never;
    query?: {
        project_id?: number | null;
        agent_id?: number | null;
    };
    url: '/api/v1/tasks/';
};

export type GetAllTasksApiV1TasksGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllTasksApiV1TasksGetError = GetAllTasksApiV1TasksGetErrors[keyof GetAllTasksApiV1TasksGetErrors];

export type GetAllTasksApiV1TasksGetResponses = {
    /**
     * Successful Response
     */
    200: Array<TaskOut>;
};

export type GetAllTasksApiV1TasksGetResponse = GetAllTasksApiV1TasksGetResponses[keyof GetAllTasksApiV1TasksGetResponses];

export type CreateTaskApiV1TasksPostData = {
    body: TaskIn;
    path?: never;
    query?: never;
    url: '/api/v1/tasks/';
};

export type CreateTaskApiV1TasksPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateTaskApiV1TasksPostError = CreateTaskApiV1TasksPostErrors[keyof CreateTaskApiV1TasksPostErrors];

export type CreateTaskApiV1TasksPostResponses = {
    /**
     * Successful Response
     */
    201: number;
};

export type CreateTaskApiV1TasksPostResponse = CreateTaskApiV1TasksPostResponses[keyof CreateTaskApiV1TasksPostResponses];

export type GetUnassignedTasksApiV1TasksUnassignedGetData = {
    body?: never;
    path?: never;
    query?: {
        project_id?: number | null;
    };
    url: '/api/v1/tasks/unassigned';
};

export type GetUnassignedTasksApiV1TasksUnassignedGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUnassignedTasksApiV1TasksUnassignedGetError = GetUnassignedTasksApiV1TasksUnassignedGetErrors[keyof GetUnassignedTasksApiV1TasksUnassignedGetErrors];

export type GetUnassignedTasksApiV1TasksUnassignedGetResponses = {
    /**
     * Successful Response
     */
    200: Array<TaskOut>;
};

export type GetUnassignedTasksApiV1TasksUnassignedGetResponse = GetUnassignedTasksApiV1TasksUnassignedGetResponses[keyof GetUnassignedTasksApiV1TasksUnassignedGetResponses];

export type DeleteTaskApiV1TasksTaskIdDeleteData = {
    body?: never;
    path: {
        task_id: number;
    };
    query?: never;
    url: '/api/v1/tasks/{task_id}';
};

export type DeleteTaskApiV1TasksTaskIdDeleteErrors = {
    /**
     * Task not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteTaskApiV1TasksTaskIdDeleteError = DeleteTaskApiV1TasksTaskIdDeleteErrors[keyof DeleteTaskApiV1TasksTaskIdDeleteErrors];

export type DeleteTaskApiV1TasksTaskIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteTaskApiV1TasksTaskIdDeleteResponse = DeleteTaskApiV1TasksTaskIdDeleteResponses[keyof DeleteTaskApiV1TasksTaskIdDeleteResponses];

export type GetTaskApiV1TasksTaskIdGetData = {
    body?: never;
    path: {
        task_id: number;
    };
    query?: never;
    url: '/api/v1/tasks/{task_id}';
};

export type GetTaskApiV1TasksTaskIdGetErrors = {
    /**
     * Task not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTaskApiV1TasksTaskIdGetError = GetTaskApiV1TasksTaskIdGetErrors[keyof GetTaskApiV1TasksTaskIdGetErrors];

export type GetTaskApiV1TasksTaskIdGetResponses = {
    /**
     * Successful Response
     */
    200: TaskOut;
};

export type GetTaskApiV1TasksTaskIdGetResponse = GetTaskApiV1TasksTaskIdGetResponses[keyof GetTaskApiV1TasksTaskIdGetResponses];

export type UpdateTaskApiV1TasksTaskIdPatchData = {
    body: TaskUpdate;
    path: {
        task_id: number;
    };
    query?: never;
    url: '/api/v1/tasks/{task_id}';
};

export type UpdateTaskApiV1TasksTaskIdPatchErrors = {
    /**
     * Task not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateTaskApiV1TasksTaskIdPatchError = UpdateTaskApiV1TasksTaskIdPatchErrors[keyof UpdateTaskApiV1TasksTaskIdPatchErrors];

export type UpdateTaskApiV1TasksTaskIdPatchResponses = {
    /**
     * Successful Response
     */
    200: TaskOut;
};

export type UpdateTaskApiV1TasksTaskIdPatchResponse = UpdateTaskApiV1TasksTaskIdPatchResponses[keyof UpdateTaskApiV1TasksTaskIdPatchResponses];

export type AssignTaskToAgentApiV1TasksTaskIdAssignAgentIdPostData = {
    body?: never;
    path: {
        task_id: number;
        agent_id: number;
    };
    query?: never;
    url: '/api/v1/tasks/{task_id}/assign/{agent_id}';
};

export type AssignTaskToAgentApiV1TasksTaskIdAssignAgentIdPostErrors = {
    /**
     * Agent is inactive
     */
    400: unknown;
    /**
     * Task or Agent not found
     */
    404: unknown;
    /**
     * Task already assigned to this agent
     */
    409: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssignTaskToAgentApiV1TasksTaskIdAssignAgentIdPostError = AssignTaskToAgentApiV1TasksTaskIdAssignAgentIdPostErrors[keyof AssignTaskToAgentApiV1TasksTaskIdAssignAgentIdPostErrors];

export type AssignTaskToAgentApiV1TasksTaskIdAssignAgentIdPostResponses = {
    /**
     * Successful Response
     */
    200: TaskOut;
};

export type AssignTaskToAgentApiV1TasksTaskIdAssignAgentIdPostResponse = AssignTaskToAgentApiV1TasksTaskIdAssignAgentIdPostResponses[keyof AssignTaskToAgentApiV1TasksTaskIdAssignAgentIdPostResponses];

export type UnassignAgentFromTaskApiV1TasksTaskIdUnassignPostData = {
    body?: never;
    path: {
        task_id: number;
    };
    query?: never;
    url: '/api/v1/tasks/{task_id}/unassign';
};

export type UnassignAgentFromTaskApiV1TasksTaskIdUnassignPostErrors = {
    /**
     * Task is not assigned
     */
    400: unknown;
    /**
     * Task not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UnassignAgentFromTaskApiV1TasksTaskIdUnassignPostError = UnassignAgentFromTaskApiV1TasksTaskIdUnassignPostErrors[keyof UnassignAgentFromTaskApiV1TasksTaskIdUnassignPostErrors];

export type UnassignAgentFromTaskApiV1TasksTaskIdUnassignPostResponses = {
    /**
     * Successful Response
     */
    200: TaskOut;
};

export type UnassignAgentFromTaskApiV1TasksTaskIdUnassignPostResponse = UnassignAgentFromTaskApiV1TasksTaskIdUnassignPostResponses[keyof UnassignAgentFromTaskApiV1TasksTaskIdUnassignPostResponses];

export type FindSuitableAgentsApiV1TasksTaskIdSuitableAgentsGetData = {
    body?: never;
    path: {
        task_id: number;
    };
    query?: never;
    url: '/api/v1/tasks/{task_id}/suitable-agents';
};

export type FindSuitableAgentsApiV1TasksTaskIdSuitableAgentsGetErrors = {
    /**
     * Task not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type FindSuitableAgentsApiV1TasksTaskIdSuitableAgentsGetError = FindSuitableAgentsApiV1TasksTaskIdSuitableAgentsGetErrors[keyof FindSuitableAgentsApiV1TasksTaskIdSuitableAgentsGetErrors];

export type FindSuitableAgentsApiV1TasksTaskIdSuitableAgentsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<AgentOut>;
};

export type FindSuitableAgentsApiV1TasksTaskIdSuitableAgentsGetResponse = FindSuitableAgentsApiV1TasksTaskIdSuitableAgentsGetResponses[keyof FindSuitableAgentsApiV1TasksTaskIdSuitableAgentsGetResponses];

export type AutoAssignTaskEndpointApiV1TasksTaskIdAutoAssignPostData = {
    body?: never;
    path: {
        task_id: number;
    };
    query?: never;
    url: '/api/v1/tasks/{task_id}/auto-assign';
};

export type AutoAssignTaskEndpointApiV1TasksTaskIdAutoAssignPostErrors = {
    /**
     * Task not found or no suitable agent found
     */
    404: unknown;
    /**
     * Task is already assigned
     */
    409: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AutoAssignTaskEndpointApiV1TasksTaskIdAutoAssignPostError = AutoAssignTaskEndpointApiV1TasksTaskIdAutoAssignPostErrors[keyof AutoAssignTaskEndpointApiV1TasksTaskIdAutoAssignPostErrors];

export type AutoAssignTaskEndpointApiV1TasksTaskIdAutoAssignPostResponses = {
    /**
     * Successful Response
     */
    200: TaskOut;
};

export type AutoAssignTaskEndpointApiV1TasksTaskIdAutoAssignPostResponse = AutoAssignTaskEndpointApiV1TasksTaskIdAutoAssignPostResponses[keyof AutoAssignTaskEndpointApiV1TasksTaskIdAutoAssignPostResponses];

export type GetUsersApiV1UsersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/users/';
};

export type GetUsersApiV1UsersGetResponses = {
    /**
     * Successful Response
     */
    200: Array<UserOut>;
};

export type GetUsersApiV1UsersGetResponse = GetUsersApiV1UsersGetResponses[keyof GetUsersApiV1UsersGetResponses];

export type CreateUserApiV1UsersPostData = {
    body: UserIn;
    path?: never;
    query?: never;
    url: '/api/v1/users/';
};

export type CreateUserApiV1UsersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateUserApiV1UsersPostError = CreateUserApiV1UsersPostErrors[keyof CreateUserApiV1UsersPostErrors];

export type CreateUserApiV1UsersPostResponses = {
    /**
     * Successful Response
     */
    200: UserOut;
};

export type CreateUserApiV1UsersPostResponse = CreateUserApiV1UsersPostResponses[keyof CreateUserApiV1UsersPostResponses];

export type GetUserApiV1UsersUserIdGetData = {
    body?: never;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type GetUserApiV1UsersUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserApiV1UsersUserIdGetError = GetUserApiV1UsersUserIdGetErrors[keyof GetUserApiV1UsersUserIdGetErrors];

export type GetUserApiV1UsersUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserOut;
};

export type GetUserApiV1UsersUserIdGetResponse = GetUserApiV1UsersUserIdGetResponses[keyof GetUserApiV1UsersUserIdGetResponses];

export type GetUserProjectsApiV1UsersUserIdProjectsGetData = {
    body?: never;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/api/v1/users/{user_id}/projects';
};

export type GetUserProjectsApiV1UsersUserIdProjectsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserProjectsApiV1UsersUserIdProjectsGetError = GetUserProjectsApiV1UsersUserIdProjectsGetErrors[keyof GetUserProjectsApiV1UsersUserIdProjectsGetErrors];

export type GetUserProjectsApiV1UsersUserIdProjectsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ProjectOut>;
};

export type GetUserProjectsApiV1UsersUserIdProjectsGetResponse = GetUserProjectsApiV1UsersUserIdProjectsGetResponses[keyof GetUserProjectsApiV1UsersUserIdProjectsGetResponses];

export type GetFilesApiV1FilesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/files/';
};

export type GetFilesApiV1FilesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<FileInfo>;
};

export type GetFilesApiV1FilesGetResponse = GetFilesApiV1FilesGetResponses[keyof GetFilesApiV1FilesGetResponses];

export type CreateFileApiV1FilesPostData = {
    body: File;
    path?: never;
    query?: never;
    url: '/api/v1/files/';
};

export type CreateFileApiV1FilesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateFileApiV1FilesPostError = CreateFileApiV1FilesPostErrors[keyof CreateFileApiV1FilesPostErrors];

export type CreateFileApiV1FilesPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type DeleteFileApiV1FilesFileNameDeleteData = {
    body?: never;
    path: {
        file_name: string;
    };
    query?: never;
    url: '/api/v1/files/{file_name}';
};

export type DeleteFileApiV1FilesFileNameDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteFileApiV1FilesFileNameDeleteError = DeleteFileApiV1FilesFileNameDeleteErrors[keyof DeleteFileApiV1FilesFileNameDeleteErrors];

export type DeleteFileApiV1FilesFileNameDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteFileApiV1FilesFileNameDeleteResponse = DeleteFileApiV1FilesFileNameDeleteResponses[keyof DeleteFileApiV1FilesFileNameDeleteResponses];

export type GetFileApiV1FilesFileNameGetData = {
    body?: never;
    path: {
        file_name: string;
    };
    query?: {
        /**
         * Set to true to download the file instead of viewing it
         */
        as_download?: boolean;
    };
    url: '/api/v1/files/{file_name}';
};

export type GetFileApiV1FilesFileNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFileApiV1FilesFileNameGetError = GetFileApiV1FilesFileNameGetErrors[keyof GetFileApiV1FilesFileNameGetErrors];

export type GetFileApiV1FilesFileNameGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetFileContentApiV1FilesFileNameContentGetData = {
    body?: never;
    path: {
        file_name: string;
    };
    query?: never;
    url: '/api/v1/files/{file_name}/content';
};

export type GetFileContentApiV1FilesFileNameContentGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFileContentApiV1FilesFileNameContentGetError = GetFileContentApiV1FilesFileNameContentGetErrors[keyof GetFileContentApiV1FilesFileNameContentGetErrors];

export type GetFileContentApiV1FilesFileNameContentGetResponses = {
    /**
     * Successful Response
     */
    200: File;
};

export type GetFileContentApiV1FilesFileNameContentGetResponse = GetFileContentApiV1FilesFileNameContentGetResponses[keyof GetFileContentApiV1FilesFileNameContentGetResponses];

export type ClientOptions = {
    baseURL: 'http://localhost:8000' | (string & {});
};